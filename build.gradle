/*

* singleload build script

* library dependencies need to be updated accordingly

*/

 

// Apply the java plugin to add support for Java

apply plugin: 'java'

apply plugin: 'war'

apply plugin: 'maven-publish'

import org.apache.tools.ant.filters.ReplaceTokens

 

configurations.all {

       resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

       resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'

}

 

allprojects {

       group = "com.onefbusa.${rootProject.name}"

}

 

ext {

       springframework_version = '4.3.16.RELEASE'

 

       appname = 'singleload'

       build_version = 'SNAPSHOT'

       build_branch = 'master'

       env = 'local'

 

       vendor = '1st Financial Bank'

       projectname = 'singleload'

       projectgroup = 'com.onefbusa.singleload'

 

       buildDate = new Date().format('MMMMM dd yyyy')

       buildTime = new Date().format('MMMddyy H:mm')

}

 

sourceSets {

       main {

              java {

                     srcDir 'src/main/java'

                     exclude 'src/main/webapp'

              }

       }

}

 

def loadConfiguration(){

       def environment = hasProperty('env') ? env : 'local'

       project.ext.environment = environment

       println "Environment is set to: $environment"

      

       def configFile = file('config.gradle')

       def config = new ConfigSlurper("$environment").parse(configFile.toURL())

       project.ext.config = config

}

 

war {

       loadConfiguration()

 

       rootSpec.eachFile {

              if (it.name == 'web.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'application-biz-foundation.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'application-biz-prepaid.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'application-biz-account.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'weblogic.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'log4j.xml') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'webtrends.js') {

                     it.filter(ReplaceTokens, tokens: config)

              }

              if (it.name == 'footer.jsp') {

                     it.filter(ReplaceTokens, tokens: config)

              }

       }

}

war.archiveName = "${appname}.war"

 

// In this section you declare the dependencies for your production and test code

dependencies {

       compile(project(":services")) {

              transitive = false

       }

 

       compile(group: 'com.onefbusa.axis', name: 'prepaidcardservice', version: 'prepaidcardservice_6_0_0_1', ext: 'jar')

       compile(group: 'com.onefbusa.axis', name: 'foundationservice', version: 'foundationservice_2_0_0_1', ext: 'jar')

       compile(group: 'com.onefbusa.axis', name: 'accountservice', version: 'accountservice_4_0_0_1', ext: 'jar')

 

       compile(group: 'commons-lang', name: 'commons-lang', version: '2.6', ext: 'jar')

//       compile(group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1', ext: 'jar')

       compile(group: 'commons-collections', name: 'commons-collections', version: '3.2.2', ext: 'jar')

       compile(group: 'commons-logging', name: 'commons-logging', version: '1.2', ext: 'jar')

       compile(group: 'commons-discovery', name: 'commons-discovery', version: '0.5', ext: 'jar')

 

       compile(group: 'org.springframework', name: 'spring-aop', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-aspects', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-beans', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-context', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-context-support', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-core', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-expression', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-jdbc', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-jms', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-orm', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-oxm', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-tx', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-web', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-webmvc', version: "${springframework_version}", ext: 'jar')

       compile(group: 'org.springframework', name: 'spring-webmvc-portlet', version: "${springframework_version}", ext: 'jar')

 

       compile(group: 'aopalliance', name: 'aopalliance', version: "1.0", ext: 'jar')

       compile(group: 'axis', name: 'axis', version: "1.4", ext: 'jar')

       compile(group: 'axis', name: 'axis-jaxrpc', version: '1.4', ext: 'jar')

       compile(group: 'org.aspectj', name: 'aspectjrt', version: '1.9.1', ext: 'jar')

       compile(group: 'org.owasp.esapi', name: 'esapi', version: '2.1.0.1', ext: 'jar')

       compile(group: 'log4j', name: 'log4j', version: '1.2.17', ext: 'jar')

       compile(group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.3', ext: 'jar')

       compile(group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25', ext: 'jar')

       compile(group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25', ext: 'jar')

       compile(group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3', ext: 'jar')

 
       //compile(group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3')

       //compile(group: 'xalan', name: 'xalan', version: '2.7.2')

       //compile(group: 'xerces', name: 'xercesImpl', version: '2.11.0')

       compile(group: 'javax.servlet.jsp.jstl', name: 'javax.servlet.jsp.jstl-api', version: '1.2.1')

       //compile(group: 'org.owasp.antisamy', name: 'antisamy', version: '1.5.7')
       
       compile(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5')





 

       compile(group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1', ext: 'jar')

       //compile(group: 'javax.servlet', name: 'jstl', version: '1.2', ext: 'jar')

       compile(group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1', ext: 'jar')

 

       //compile(group: 'net.sf.ehcache', name: 'ehcache-terracotta', version: '2.1.1', ext: 'jar')

       //compile(group: 'net.sf.ehcache', name: 'ehcache-core', version: '2.6.11', ext: 'jar')

       compile(group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.5', ext: 'jar')

       compile(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.5', ext: 'jar')

       compile(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.5', ext: 'jar')

       compile(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.5', ext: 'jar')

}

 

tasks.publishToMavenLocal.doLast() {

       copy {

              from "${project.rootDir}/singleload/build/libs"

              into "${tomcat_home}/webapps/"

              //into "C:/apache-tomcat-8.5.11/webapps/"

              include "singleload*.war"

       }

 

       delete "${project.rootDir}/build"

}

 
